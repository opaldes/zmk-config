/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        System {
            bindings = <&sl 5>;
            key-positions = <37 40>;
        };

        Gaming {
            bindings = <&tog 3>;
            key-positions = <41 36>;
        };

        Home {
            bindings = <&to 0>;
            key-positions = <36 40 41 37>;
        };
    };

    behaviors {
        home_mod: home_mod {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_MOD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Home {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q              &kp W                 &kp E                 &kp R              &kp T        &kp Y    &kp U              &kp I            &kp O            &kp P                &kp BSPC
&kp TAB     &home_mod LCTRL A  &home_mod LEFT_GUI S  &home_mod LEFT_ALT D  &home_mod LSHFT F  &kp G        &kp H    &mt RIGHT_SHIFT J  &mt RIGHT_ALT K  &mt RIGHT_GUI L  &mt RCTRL SEMICOLON  &kp SQT
&to 0       &kp Z              &kp X                 &kp C                 &kp V              &kp B        &kp N    &kp M              &kp COMMA        &kp DOT          &kp FSLH             &kp BACKSLASH
                                                     &kp LGUI              &mo 1              &kp SPACE    &kp RET  &mo 2              &kp LALT
            >;
        };

        Symbols {
            bindings = <
&trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE  &kp RIGHT_BRACE  &trans    &trans  &kp N7  &kp N8  &kp N9  &kp PLUS      &kp MINUS
&trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp UNDER       &kp MINUS        &trans    &trans  &kp N4  &kp N5  &kp N6  &kp N0        &kp EQUAL
&trans  &trans                &trans                 &trans          &trans           &trans    &trans  &kp N1  &kp N2  &kp N3  &kp ASTERISK  &kp SLASH
                                                     &trans          &trans           &trans    &trans  &trans  &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT         &kp RBKT  &kp BSLH  &kp GRAVE
&trans     &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC         &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp LALT
            >;
        };

        Gaming {
            bindings = <
&mt ESCAPE TAB  &kp Q  &kp W  &kp E      &kp R         &kp T        &kp Y    &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp LSHFT       &kp A  &kp S  &kp D      &kp F         &kp G        &kp H    &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LCTRL       &kp Z  &kp X  &kp C      &kp V         &kp B        &kp N    &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                              &kp LMETA  &kp LEFT_ALT  &kp SPACE    &kp RET  &trans  &trans
            >;
        };

        GamingRaise {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        System {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none       &none         &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none  &none  &none  &none  &none  &none
&none       &out OUT_TOG  &none         &none         &none         &none           &none  &none  &none  &none  &none  &none
                                        &none         &none         &none           &none  &none  &none
            >;
        };
    };
};
